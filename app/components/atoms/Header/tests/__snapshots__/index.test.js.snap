// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> Component tests should render and match the header snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "backgroundColor": "#000000",
        "elevation": 4,
        "zIndex": 0,
      },
      Object {
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "elevation": 0,
        "flexDirection": "row",
        "height": 56,
        "marginTop": 0,
        "paddingHorizontal": 4,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginHorizontal": 10,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../app/assets/images/swipejobs_logo.png",
          }
        }
        style={
          Object {
            "height": 50,
            "tintColor": "#ffffff",
            "width": "50%",
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`<Header /> Component tests should render and match the header snapshot when profile is true 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "backgroundColor": "#000000",
        "elevation": 4,
        "zIndex": 0,
      },
      Object {
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "elevation": 0,
        "flexDirection": "row",
        "height": 56,
        "marginTop": 0,
        "paddingHorizontal": 4,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "marginHorizontal": 10,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "white",
              "flex": 1,
              "fontSize": 20,
              "marginRight": 10,
              "textAlign": "center",
            },
          ]
        }
        testID="t"
      >
        Jim Rose
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
